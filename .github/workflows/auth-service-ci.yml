name: Auth Service CI/CD

on:
  push:
    branches: [psychology-migration]
    paths:
      - 'microservices/auth-service/**'

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Penting untuk mendapatkan semua file

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Build
        working-directory: microservices/auth-service
        run: go build -v ./...

      - name: Run unit tests
        working-directory: microservices/auth-service
        run: go test -v -coverprofile=coverage.out -short ./...

      - name: Run integration tests
        working-directory: microservices/auth-service
        run: go test -v -tags=integration ./...
        env:
          AUTH_DB_URL: 'postgres://test:test@localhost:5432/testdb?sslmode=disable'
          REDIS_URL: 'redis://localhost:6379/0'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: microservices/auth-service/coverage.out

  deploy-staging:
    needs: build-test
    if: ${{ always() && needs.build-test.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up KinD cluster
        run: |
          # Install KinD
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/

          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

          # Create cluster config file
          cat <<EOF > kind-config.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            extraPortMappings:
            - containerPort: 50051
              hostPort: 50051
              protocol: TCP
          EOF

          # Create cluster
          kind create cluster --config=kind-config.yaml --wait 120s

          # Verify cluster
          kubectl cluster-info
          kubectl get nodes

      - name: Build Docker image
        working-directory: microservices/auth-service
        run: docker build -t auth-service:${{ github.sha }} .

      - name: Load image into KinD cluster
        run: |
          # List images before load
          docker images

          # Load image
          kind load docker-image auth-service:${{ github.sha }}

          # Verify loaded images
          docker exec -it kind-control-plane crictl images

      - name: Deploy database
        run: |
          kubectl create namespace psychology-app || true
          kubectl apply -f microservices/auth-service/kubernetes/db-deployment.yaml
          kubectl wait --for=condition=ready pod -l app=db-service -n psychology-app --timeout=180s

      - name: Deploy auth service
        run: |
          # Apply deployment and service
          kubectl apply -f microservices/auth-service/kubernetes/auth-deployment.yaml
          kubectl apply -f microservices/auth-service/kubernetes/auth-service.yaml

          # Update image
          kubectl set image deployment/auth-service \
            auth-service=auth-service:${{ github.sha }} \
            -n psychology-app
            
          # Wait for rollout
          kubectl rollout status deployment/auth-service -n psychology-app --timeout=180s

      - name: Verify deployment
        run: |
          kubectl get all -n psychology-app
          kubectl get pods -n psychology-app -o wide
          kubectl logs deployment/auth-service -n psychology-app
          kubectl describe pod -l app=auth-service -n psychology-app
          kubectl get events -n psychology-app --sort-by='.lastTimestamp'
